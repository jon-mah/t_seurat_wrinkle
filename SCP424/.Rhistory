install.packages('devtools')
install.packages("devtools")
devtools::install_github('satijalab/seurat-data')
install.packages('Seurat')
install.packages("Seurat")
library(SeuratData)
library(Seurat)
library(dplyr)
library(patchwork)
AvailableData()
InstallData("pbmcsca")
data('pbmcsca')
if (requireNamespace('Seurat', quietly = TRUE)) {
# Download files from the Broad's Single Cell Portal prior to running
# Cannot download through R as the Broad requires a free account first
cells.map <- read.table(file = 'map.CPM.names.Count.names.txt', header = TRUE, row.names = 2, as.is = TRUE)
umis <- Matrix::readMM(file = 'counts.umi.txt')
genes.umi <- readLines(con = 'genes.umi.txt')
genes.umi <- sapply(X = strsplit(x = genes.umi, split = '_'), FUN = '[[', 2)
cells.umi <- readLines(con = 'cells.umi.txt')
cells.umi <- cells.map[cells.umi, , drop = TRUE]
dimnames(x = umis) <- list(genes.umi, cells.umi)
reads <- Matrix::readMM(file = 'counts.read.txt.gz')
genes.read <- readLines(con = 'genes.read.txt')
genes.read <- sapply(X = strsplit(x = genes.read, split = '_'), FUN = '[[', 2)
cells.read <- readLines(con = 'cells.read.txt')
cells.read <- cells.map[cells.read, , drop = TRUE]
dimnames(x = reads) <- list(genes.read, cells.read)
counts <- cbind(umis, reads)
metadata <- read.table(file = 'meta.txt', sep = '\t', header = TRUE, row.names = 1, as.is = TRUE)
metadata <- metadata[-1, ]
counts <- counts[, rownames(x = metadata)]
rownames(x = counts) <- make.unique(names = rownames(x = counts))
pbmcsca <- Seurat::CreateSeuratObject(counts = counts, project = 'pbmcsca', meta.data = metadata)
file.remove('map.CPM.names.Count.names.txt', 'counts.umi.txt', 'genes.umi.txt', 'cells.umi.txt', 'counts.read.txt.gz', 'genes.read.txt', 'cells.read.txt', 'meta.txt')
}
setwd("C:/Users/jonat/OneDrive/Desktop/GitHub/SCP424/other")
setwd("C:/Users/jonat/OneDrive/Desktop/GitHub/SCP424/other")
if (requireNamespace('Seurat', quietly = TRUE)) {
# Download files from the Broad's Single Cell Portal prior to running
# Cannot download through R as the Broad requires a free account first
cells.map <- read.table(file = 'map.CPM.names.Count.names.txt', header = TRUE, row.names = 2, as.is = TRUE)
umis <- Matrix::readMM(file = 'counts.umi.txt')
genes.umi <- readLines(con = 'genes.umi.txt')
genes.umi <- sapply(X = strsplit(x = genes.umi, split = '_'), FUN = '[[', 2)
cells.umi <- readLines(con = 'cells.umi.txt')
cells.umi <- cells.map[cells.umi, , drop = TRUE]
dimnames(x = umis) <- list(genes.umi, cells.umi)
reads <- Matrix::readMM(file = 'counts.read.txt.gz')
genes.read <- readLines(con = 'genes.read.txt')
genes.read <- sapply(X = strsplit(x = genes.read, split = '_'), FUN = '[[', 2)
cells.read <- readLines(con = 'cells.read.txt')
cells.read <- cells.map[cells.read, , drop = TRUE]
dimnames(x = reads) <- list(genes.read, cells.read)
counts <- cbind(umis, reads)
metadata <- read.table(file = 'meta.txt', sep = '\t', header = TRUE, row.names = 1, as.is = TRUE)
metadata <- metadata[-1, ]
counts <- counts[, rownames(x = metadata)]
rownames(x = counts) <- make.unique(names = rownames(x = counts))
pbmcsca <- Seurat::CreateSeuratObject(counts = counts, project = 'pbmcsca', meta.data = metadata)
file.remove('map.CPM.names.Count.names.txt', 'counts.umi.txt', 'genes.umi.txt', 'cells.umi.txt', 'counts.read.txt.gz', 'genes.read.txt', 'cells.read.txt', 'meta.txt')
}
if (requireNamespace('Seurat', quietly = TRUE)) {
# Download files from the Broad's Single Cell Portal prior to running
# Cannot download through R as the Broad requires a free account first
cells.map <- read.table(file = 'map.CPM.names.Count.names.txt', header = TRUE, row.names = 2, as.is = TRUE)
umis <- Matrix::readMM(file = 'counts.umi.txt.gz')
genes.umi <- readLines(con = 'genes.umi.txt.gz')
genes.umi <- sapply(X = strsplit(x = genes.umi, split = '_'), FUN = '[[', 2)
cells.umi <- readLines(con = 'cells.umi.txt')
cells.umi <- cells.map[cells.umi, , drop = TRUE]
dimnames(x = umis) <- list(genes.umi, cells.umi)
reads <- Matrix::readMM(file = 'counts.read.txt.gz')
genes.read <- readLines(con = 'genes.read.txt')
genes.read <- sapply(X = strsplit(x = genes.read, split = '_'), FUN = '[[', 2)
cells.read <- readLines(con = 'cells.read.txt')
cells.read <- cells.map[cells.read, , drop = TRUE]
dimnames(x = reads) <- list(genes.read, cells.read)
counts <- cbind(umis, reads)
metadata <- read.table(file = 'meta.txt', sep = '\t', header = TRUE, row.names = 1, as.is = TRUE)
metadata <- metadata[-1, ]
counts <- counts[, rownames(x = metadata)]
rownames(x = counts) <- make.unique(names = rownames(x = counts))
pbmcsca <- Seurat::CreateSeuratObject(counts = counts, project = 'pbmcsca', meta.data = metadata)
file.remove('map.CPM.names.Count.names.txt', 'counts.umi.txt', 'genes.umi.txt', 'cells.umi.txt', 'counts.read.txt.gz', 'genes.read.txt', 'cells.read.txt', 'meta.txt')
}
if (requireNamespace('Seurat', quietly = TRUE)) {
# Download files from the Broad's Single Cell Portal prior to running
# Cannot download through R as the Broad requires a free account first
cells.map <- read.table(file = 'map.CPM.names.Count.names.txt', header = TRUE, row.names = 2, as.is = TRUE)
umis <- Matrix::readMM(file = 'counts.umi.txt.gz')
genes.umi <- readLines(con = 'genes.umi.txt')
genes.umi <- sapply(X = strsplit(x = genes.umi, split = '_'), FUN = '[[', 2)
cells.umi <- readLines(con = 'cells.umi.txt')
cells.umi <- cells.map[cells.umi, , drop = TRUE]
dimnames(x = umis) <- list(genes.umi, cells.umi)
reads <- Matrix::readMM(file = 'counts.read.txt.gz')
genes.read <- readLines(con = 'genes.read.txt')
genes.read <- sapply(X = strsplit(x = genes.read, split = '_'), FUN = '[[', 2)
cells.read <- readLines(con = 'cells.read.txt')
cells.read <- cells.map[cells.read, , drop = TRUE]
dimnames(x = reads) <- list(genes.read, cells.read)
counts <- cbind(umis, reads)
metadata <- read.table(file = 'meta.txt', sep = '\t', header = TRUE, row.names = 1, as.is = TRUE)
metadata <- metadata[-1, ]
counts <- counts[, rownames(x = metadata)]
rownames(x = counts) <- make.unique(names = rownames(x = counts))
pbmcsca <- Seurat::CreateSeuratObject(counts = counts, project = 'pbmcsca', meta.data = metadata)
file.remove('map.CPM.names.Count.names.txt', 'counts.umi.txt', 'genes.umi.txt', 'cells.umi.txt', 'counts.read.txt.gz', 'genes.read.txt', 'cells.read.txt', 'meta.txt')
}
if (requireNamespace('Seurat', quietly = TRUE)) {
# Download files from the Broad's Single Cell Portal prior to running
# Cannot download through R as the Broad requires a free account first
cells.map <- read.table(file = 'map.CPM.names.Count.names.txt', header = TRUE, row.names = 2, as.is = TRUE)
umis <- Matrix::readMM(file = 'counts.umi.txt.gz')
genes.umi <- readLines(con = 'genes.umi.txt')
genes.umi <- sapply(X = strsplit(x = genes.umi, split = '_'), FUN = '[[', 2)
cells.umi <- readLines(con = 'cells.umi.new.txt')
cells.umi <- cells.map[cells.umi, , drop = TRUE]
dimnames(x = umis) <- list(genes.umi, cells.umi)
reads <- Matrix::readMM(file = 'counts.read.txt.gz')
genes.read <- readLines(con = 'genes.read.txt')
genes.read <- sapply(X = strsplit(x = genes.read, split = '_'), FUN = '[[', 2)
cells.read <- readLines(con = 'cells.read.txt')
cells.read <- cells.map[cells.read, , drop = TRUE]
dimnames(x = reads) <- list(genes.read, cells.read)
counts <- cbind(umis, reads)
metadata <- read.table(file = 'meta.txt', sep = '\t', header = TRUE, row.names = 1, as.is = TRUE)
metadata <- metadata[-1, ]
counts <- counts[, rownames(x = metadata)]
rownames(x = counts) <- make.unique(names = rownames(x = counts))
pbmcsca <- Seurat::CreateSeuratObject(counts = counts, project = 'pbmcsca', meta.data = metadata)
file.remove('map.CPM.names.Count.names.txt', 'counts.umi.txt', 'genes.umi.txt', 'cells.umi.txt', 'counts.read.txt.gz', 'genes.read.txt', 'cells.read.txt', 'meta.txt')
}
if (requireNamespace('Seurat', quietly = TRUE)) {
# Download files from the Broad's Single Cell Portal prior to running
# Cannot download through R as the Broad requires a free account first
cells.map <- read.table(file = 'map.CPM.names.Count.names.txt', header = TRUE, row.names = 2, as.is = TRUE)
umis <- Matrix::readMM(file = 'counts.umi.txt.gz')
genes.umi <- readLines(con = 'genes.umi.txt')
genes.umi <- sapply(X = strsplit(x = genes.umi, split = '_'), FUN = '[[', 2)
cells.umi <- readLines(con = 'cells.umi.new.txt')
cells.umi <- cells.map[cells.umi, , drop = TRUE]
dimnames(x = umis) <- list(genes.umi, cells.umi)
reads <- Matrix::readMM(file = 'counts.read.txt.gz')
genes.read <- readLines(con = 'genes.read.txt')
genes.read <- sapply(X = strsplit(x = genes.read, split = '_'), FUN = '[[', 2)
cells.read <- readLines(con = 'cells.read.new.txt')
cells.read <- cells.map[cells.read, , drop = TRUE]
dimnames(x = reads) <- list(genes.read, cells.read)
counts <- cbind(umis, reads)
metadata <- read.table(file = 'meta.txt', sep = '\t', header = TRUE, row.names = 1, as.is = TRUE)
metadata <- metadata[-1, ]
counts <- counts[, rownames(x = metadata)]
rownames(x = counts) <- make.unique(names = rownames(x = counts))
pbmcsca <- Seurat::CreateSeuratObject(counts = counts, project = 'pbmcsca', meta.data = metadata)
file.remove('map.CPM.names.Count.names.txt', 'counts.umi.txt', 'genes.umi.txt', 'cells.umi.txt', 'counts.read.txt.gz', 'genes.read.txt', 'cells.read.txt', 'meta.txt')
}
